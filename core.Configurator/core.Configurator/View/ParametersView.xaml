<UserControl x:Class="mop.Configurator.View.ParametersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:mop.Configurator"
             xmlns:converters="clr-namespace:mop.Configurator.Converters"
              xmlns:controls="clr-namespace:mop.Configurator.Controls"
             xmlns:icons="clr-namespace:wpf.Icons;assembly=wpf.Icons"
             mc:Ignorable="d" 
             d:DesignHeight="450"
             d:DesignWidth="800"
              d:DataContext="{d:DesignInstance local:ParametersViewModel}" 
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Themes/Generic.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:ParameterNameValueConverter x:Key="ParameterNameValueConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:DebugVisibilityConverter x:Key="DebugVisibilityConverter"/>
            <FontFamily  x:Key="FontAwesome">/wpf.Icons;Component/Resources/#fontawesome</FontFamily>
            <converters:BindingWidthConverter x:Key="BindingWidthConverter"/>
            <Style TargetType="TextBlock" x:Key="NameTextBlockStyle" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>               
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsNameMatch}" Value="true">
                        <Setter Property="Background" Value="LightYellow"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="TextBlock" x:Key="ValueTextBlockStyle" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsValueMatch}" Value="true">
                        <Setter Property="Background" Value="LightYellow"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="TextBlock" x:Key="DescriptionTextBlockStyle" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="FontFamily" Value="{StaticResource Roboto}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsDescriptionMatch}" Value="true">
                        <Setter Property="Background" Value="LightYellow"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>          
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>       
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <controls:TreeListView AllowsColumnReorder="True" x:Name="tree" Grid.Row="2" ItemsSource="{Binding Parameters}">
            <controls:TreeListView.Columns>
                <GridViewColumn  Width="{Binding ElementName=ParameterName_WidthMap, Path=ActualWidth, Converter={StaticResource BindingWidthConverter}}">
                    <GridViewColumn.Header>
                        <TextBlock Text="Название" Foreground="{StaticResource TextInfo}"/>
                    </GridViewColumn.Header>
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <controls:TreeListViewExpander Grid.Column="0"/>
                                <!--<CheckBox IsChecked="{Binding IsChecked}"/>-->
                                <TextBlock Grid.Column="2" Style="{StaticResource NameTextBlockStyle}" Text="{Binding DisplayName}"  TextTrimming="CharacterEllipsis" TextWrapping="Wrap" ></TextBlock>
                            </Grid>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn  Width="{Binding ElementName=ParameterValue_WidthMap, Path=ActualWidth}">
                    <GridViewColumn.Header>
                        <TextBlock Text="Значение" Foreground="{StaticResource TextInfo}"/>
                    </GridViewColumn.Header>
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button Command="{Binding  RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl},Path=DataContext.EditCommand}" 
                                        Grid.Column="0"
                                        CommandParameter="{Binding}"  
                                        BorderBrush="Transparent" 
                                        Margin="5,3" 
                                        Visibility="{Binding IsEditable, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Button.Content>
                                        <TextBlock  Text="{icons:Icon pencil}" FontFamily="{StaticResource FontAwesome}" VerticalAlignment="Center"  Margin="5,0" FontSize="14"  Foreground="{StaticResource TextInfo}"/>
                                    </Button.Content>
                                </Button>
                                <TextBlock Style="{StaticResource ValueTextBlockStyle}"  
                                           Grid.Column="1"  
                                           Margin="3"  
                                           VerticalAlignment="Center" 
                                           Text="{Binding DisplayValue}" 
                                           TextTrimming="CharacterEllipsis">
                                    <TextBlock.ToolTip>
                                        <ToolTip >
                                            <Grid>                                               
                                                <TextBlock Grid.Column="1" Text="{Binding Value}" TextWrapping="Wrap" Padding="10"/>
                                            </Grid>                                         
                                        </ToolTip>
                                    </TextBlock.ToolTip>
                                    <!--<TextBlock.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Отобразить XPath" Click="MenuItem_Click" Visibility="{Binding Converter={StaticResource DebugVisibilityConverter}}"/>
                                        </ContextMenu>
                                    </TextBlock.ContextMenu>-->
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Width="{Binding ElementName=ParameterDesc_WidthMap, Path=ActualWidth}" >
                    <GridViewColumn.Header>
                        <TextBlock Text="Описание" Foreground="{StaticResource TextInfo}"/>
                    </GridViewColumn.Header>
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Description}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Style="{StaticResource DescriptionTextBlockStyle}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </controls:TreeListView.Columns>
            <controls:TreeListView.ItemTemplate>
                <HierarchicalDataTemplate  ItemsSource="{Binding Parameters}">
                    <TextBlock Text="{Binding DisplayName}" />
                </HierarchicalDataTemplate>
            </controls:TreeListView.ItemTemplate>
            <controls:TreeListView.ItemContainerStyle>
                <Style TargetType="TreeViewItem" >
                    <Setter Property="Template" Value="{StaticResource TreeListViewItem}"/>
                    <Setter Property="Visibility" Value="{Binding IsVisibleValue}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                </Style>
            </controls:TreeListView.ItemContainerStyle>
        </controls:TreeListView>
        <Grid Visibility="Hidden" Grid.Row="3" Width="{Binding ElementName=tree, Path=ActualWidth}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" MinWidth="100"/>
                <ColumnDefinition Width="2*" MinWidth="100" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" x:Name="ParameterName_WidthMap"/>
            <Grid Grid.Column="1" x:Name="ParameterValue_WidthMap"/>
            <Grid Grid.Column="2" x:Name="ParameterDesc_WidthMap"/>
        </Grid>
    </Grid>
</UserControl>
